# 🌸 ゆいちゃんの保育園準備アプリ

> 保育園の持ち物管理を効率化するPWAアプリケーション。朝の在庫確認、夕方の記録、翌日の準備計算、週単位アイテム管理機能を提供し、保護者の日常的な負担を軽減します。

## 技術スタック

- **フロントエンド**: React 18 + TypeScript
- **バックエンド**: Firebase (Authentication + Firestore)
- **アーキテクチャ**: PWA対応のSPAアプリケーション
- **認証**: Google OAuth 2.0
- **デプロイ**: Firebase Hosting

## 主要ドキュメント

### アーキテクチャ
- [プロジェクト概要](./docs/architecture/overview.md) - アプリケーションの全体像と主要機能
- [技術スタック詳細](./docs/architecture/tech-stack.md) - 使用技術とその選択理由
- [データフロー](./docs/architecture/data-flow.md) - データの流れと状態管理

### コンポーネント設計
- [認証システム](./docs/components/authentication.md) - ログイン・認証機能の実装
- [メイン機能](./docs/components/main-features.md) - 在庫管理・記録機能の詳細
- [UI/UX設計](./docs/components/ui-ux.md) - ユーザーインターフェース設計

### データ設計
- [データモデル](./docs/data/models.md) - Firestore データ構造
- [アイテム設定](./docs/data/items-config.md) - マスターデータ設計
- [型定義](./docs/data/type-definitions.md) - TypeScript型システム

### PWA機能
- [PWA実装](./docs/pwa/implementation.md) - Progressive Web App機能
- [オフライン対応](./docs/pwa/offline.md) - オフライン機能とキャッシュ戦略

### 開発・運用
- [開発環境構築](./docs/development/setup.md) - 開発環境のセットアップ
- [デプロイ手順](./docs/development/deployment.md) - Firebase Hostingへのデプロイ
- [テスト戦略](./docs/development/testing.md) - テスト方針と実装

## クイックスタート

1. **開発環境**: Node.js 18+ + npm
2. **Firebase設定**: プロジェクト作成と認証設定
3. **インストール**: `npm install`
4. **開発サーバー**: `npm start`
5. **デプロイ**: `npm run build && firebase deploy`

## 主要機能概要

1. **日常管理フロー**: 朝の在庫確認 → 夕方の記録 → 翌日の準備計算
2. **週単位管理**: 水着・布団カバー等のスケジュール管理
3. **インテリジェント計算**: グループアイテム対応・複雑な在庫計算
4. **PWA対応**: オフライン機能・インストール可能・モバイル最適化